

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Oct 24 09:47:49 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46J13
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 29/04/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F46J13 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     _TMR0L	set	4054
    71  0000                     _TMR0H	set	4055
    72  0000                     _TRISD	set	3989
    73  0000                     _TRISC	set	3988
    74  0000                     _TRISB	set	3987
    75  0000                     _LATC	set	3979
    76  0000                     _LATB	set	3978
    77                           
    78                           	psect	nvCOMRAM
    79  00000C                     __pnvCOMRAM:
    80                           	callstack 0
    81  00000C                     _INT2_InterruptHandler:
    82                           	callstack 0
    83  00000C                     	ds	2
    84  00000E                     _INT1_InterruptHandler:
    85                           	callstack 0
    86  00000E                     	ds	2
    87  000010                     _timer0ReloadVal:
    88                           	callstack 0
    89  000010                     	ds	2
    90  000012                     _TMR0_InterruptHandler:
    91                           	callstack 0
    92  000012                     	ds	2
    93  0000                     _T0CON	set	4053
    94  0000                     _LATAbits	set	3977
    95  0000                     _LATCbits	set	3979
    96  0000                     _TRISEbits	set	3990
    97  0000                     _RPINR1	set	3809
    98  0000                     _RPINR2	set	3810
    99  0000                     _REFOCON	set	3901
   100  0000                     _OSCTUNE	set	3995
   101  0000                     _OSCCON	set	4051
   102  0000                     _T0CONbits	set	4053
   103  0000                     _INTCON3bits	set	4080
   104  0000                     _INTCON2bits	set	4081
   105  0000                     _RCONbits	set	4048
   106  0000                     _ODCON3	set	3904
   107  0000                     _ODCON2	set	3905
   108  0000                     _ODCON1	set	3906
   109  0000                     _ANCON0	set	3912
   110  0000                     _OSCCON2	set	3975
   111  0000                     _LATA	set	3977
   112  0000                     _LATD	set	3980
   113  0000                     _LATE	set	3981
   114  0000                     _TRISA	set	3986
   115  0000                     _TRISE	set	3990
   116  0000                     _ANCON1	set	3913
   117  0000                     _INTCONbits	set	4082
   118                           
   119                           ; #config settings
   120                           
   121                           	psect	cinit
   122  000248                     __pcinit:
   123                           	callstack 0
   124  000248                     start_initialization:
   125                           	callstack 0
   126  000248                     __initialization:
   127                           	callstack 0
   128  000248                     end_of_initialization:
   129                           	callstack 0
   130  000248                     __end_of__initialization:
   131                           	callstack 0
   132  000248  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   133  00024A  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   134  00024C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   135  00024E  6EF8               	movwf	tblptru,c
   136  000250  0100               	movlb	0
   137  000252  EF08  F001         	goto	_main	;jump to C main() function
   138                           
   139                           	psect	cstackCOMRAM
   140  000001                     __pcstackCOMRAM:
   141                           	callstack 0
   142  000001                     ??_INTERRUPT_InterruptManagerHigh:
   143  000001                     
   144                           ; 1 bytes @ 0x0
   145  000001                     	ds	2
   146  000003                     ??_INTERRUPT_InterruptManagerLow:
   147  000003                     
   148                           ; 1 bytes @ 0x2
   149  000003                     	ds	5
   150  000008                     TMR0_SetInterruptHandler@InterruptHandler:
   151                           	callstack 0
   152  000008                     INT1_SetInterruptHandler@InterruptHandler:
   153                           	callstack 0
   154  000008                     INT2_SetInterruptHandler@InterruptHandler:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0x7
   158  000008                     	ds	2
   159  00000A                     ??_TMR0_Initialize:
   160  00000A                     
   161                           ; 1 bytes @ 0x9
   162  00000A                     	ds	2
   163  00000C                     
   164                           ; 1 bytes @ 0xB
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   167 ;;
   168 ;; *************** function _main *****************
   169 ;; Defined at:
   170 ;;		line 49 in file "main.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;		None
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, status,2, status,0, cstack
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   188 ;;Total ram usage:        0 bytes
   189 ;; Hardware stack levels required when called: 11
   190 ;; This function calls:
   191 ;;		_SYSTEM_Initialize
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text0
   198  000210                     __ptext0:
   199                           	callstack 0
   200  000210                     _main:
   201                           	callstack 20
   202  000210                     
   203                           ;main.c: 52:     SYSTEM_Initialize();
   204  000210  ECFD  F000         	call	_SYSTEM_Initialize	;wreg free
   205  000214                     
   206                           ;main.c: 59:     (INTCONbits.GIEH = 1);
   207  000214  8EF2               	bsf	242,7,c	;volatile
   208  000216                     
   209                           ;main.c: 62:     (INTCONbits.GIEL = 1);
   210  000216  8CF2               	bsf	242,6,c	;volatile
   211  000218                     l1075:
   212                           
   213                           ;main.c: 77:     {;main.c: 79:         __nop();
   214  000218  F000               	nop	
   215  00021A                     
   216                           ;main.c: 80:         __nop();
   217  00021A  F000               	nop	
   218  00021C  EF0C  F001         	goto	l1075
   219  000220  EF47  F000         	goto	start
   220  000224                     __end_of_main:
   221                           	callstack 0
   222                           
   223 ;; *************** function _SYSTEM_Initialize *****************
   224 ;; Defined at:
   225 ;;		line 50 in file "mcc_generated_files/mcc.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;		None
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, status,2, status,0, cstack
   234 ;; Tracked objects:
   235 ;;		On entry : 0/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   243 ;;Total ram usage:        0 bytes
   244 ;; Hardware stack levels used: 1
   245 ;; Hardware stack levels required when called: 10
   246 ;; This function calls:
   247 ;;		_EXT_INT_Initialize
   248 ;;		_INTERRUPT_Initialize
   249 ;;		_OSCILLATOR_Initialize
   250 ;;		_PIN_MANAGER_Initialize
   251 ;;		_TMR0_Initialize
   252 ;; This function is called by:
   253 ;;		_main
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257                           	psect	text1
   258  0001FA                     __ptext1:
   259                           	callstack 0
   260  0001FA                     _SYSTEM_Initialize:
   261                           	callstack 20
   262  0001FA                     
   263                           ;mcc_generated_files/mcc.c: 52:     OSCILLATOR_Initialize();
   264  0001FA  EC12  F001         	call	_OSCILLATOR_Initialize	;wreg free
   265  0001FE                     
   266                           ;mcc_generated_files/mcc.c: 54:     INTERRUPT_Initialize();
   267  0001FE  EC30  F001         	call	_INTERRUPT_Initialize	;wreg free
   268  000202                     
   269                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
   270  000202  EC49  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   271  000206                     
   272                           ;mcc_generated_files/mcc.c: 56:     EXT_INT_Initialize();
   273  000206  ECEA  F000         	call	_EXT_INT_Initialize	;wreg free
   274  00020A                     
   275                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
   276  00020A  EC6F  F000         	call	_TMR0_Initialize	;wreg free
   277  00020E  0012               	return		;funcret
   278  000210                     __end_of_SYSTEM_Initialize:
   279                           	callstack 0
   280                           
   281 ;; *************** function _TMR0_Initialize *****************
   282 ;; Defined at:
   283 ;;		line 67 in file "mcc_generated_files/tmr0.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, status,2, status,0, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : 0/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   299 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   301 ;;Total ram usage:        2 bytes
   302 ;; Hardware stack levels used: 1
   303 ;; Hardware stack levels required when called: 9
   304 ;; This function calls:
   305 ;;		_TMR0_SetInterruptHandler
   306 ;; This function is called by:
   307 ;;		_SYSTEM_Initialize
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text2
   312  0000DE                     __ptext2:
   313                           	callstack 0
   314  0000DE                     _TMR0_Initialize:
   315                           	callstack 20
   316  0000DE                     
   317                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
   318  0000DE  9CD5               	bcf	213,6,c	;volatile
   319  0000E0                     
   320                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xEC;
   321  0000E0  0EEC               	movlw	236
   322  0000E2  6ED7               	movwf	215,c	;volatile
   323                           
   324                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x29;
   325  0000E4  0E29               	movlw	41
   326  0000E6  6ED6               	movwf	214,c	;volatile
   327  0000E8                     
   328                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
   329  0000E8  50D6               	movf	214,w,c	;volatile
   330  0000EA  CFD7 F00A          	movff	4055,??_TMR0_Initialize	;volatile
   331  0000EE  6A0B               	clrf	(??_TMR0_Initialize+1)^0,c
   332  0000F0  C00A  F00B         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
   333  0000F4  6A0A               	clrf	??_TMR0_Initialize^0,c
   334  0000F6  100A               	iorwf	??_TMR0_Initialize^0,w,c
   335  0000F8  6E10               	movwf	_timer0ReloadVal^0,c	;volatile
   336  0000FA  500B               	movf	(??_TMR0_Initialize+1)^0,w,c
   337  0000FC  6E11               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
   338  0000FE                     
   339                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
   340  0000FE  94F2               	bcf	242,2,c	;volatile
   341  000100                     
   342                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
   343  000100  8AF2               	bsf	242,5,c	;volatile
   344  000102                     
   345                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
   346  000102  0E92               	movlw	low _TMR0_DefaultInterruptHandler
   347  000104  6E08               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   348  000106  0E02               	movlw	high _TMR0_DefaultInterruptHandler
   349  000108  6E09               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   350  00010A  EC2B  F001         	call	_TMR0_SetInterruptHandler	;wreg free
   351  00010E                     
   352                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x97;
   353  00010E  0E97               	movlw	151
   354  000110  6ED5               	movwf	213,c	;volatile
   355  000112  0012               	return		;funcret
   356  000114                     __end_of_TMR0_Initialize:
   357                           	callstack 0
   358                           
   359 ;; *************** function _TMR0_SetInterruptHandler *****************
   360 ;; Defined at:
   361 ;;		line 164 in file "mcc_generated_files/tmr0.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;  InterruptHan    2    7[COMRAM] PTR FTN()void 
   364 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2, status,0
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   376 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   379 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   380 ;;Total ram usage:        2 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; Hardware stack levels required when called: 8
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		_TMR0_Initialize
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           	psect	text3
   391  000256                     __ptext3:
   392                           	callstack 0
   393  000256                     _TMR0_SetInterruptHandler:
   394                           	callstack 20
   395  000256                     
   396                           ;mcc_generated_files/tmr0.c: 165:     TMR0_InterruptHandler = InterruptHandler;
   397  000256  C008  F012         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   398  00025A  C009  F013         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   399  00025E  0012               	return		;funcret
   400  000260                     __end_of_TMR0_SetInterruptHandler:
   401                           	callstack 0
   402                           
   403 ;; *************** function _PIN_MANAGER_Initialize *****************
   404 ;; Defined at:
   405 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   423 ;;Total ram usage:        0 bytes
   424 ;; Hardware stack levels used: 1
   425 ;; Hardware stack levels required when called: 8
   426 ;; This function calls:
   427 ;;		Nothing
   428 ;; This function is called by:
   429 ;;		_SYSTEM_Initialize
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text4
   434  000092                     __ptext4:
   435                           	callstack 0
   436  000092                     _PIN_MANAGER_Initialize:
   437                           	callstack 21
   438  000092                     
   439                           ;mcc_generated_files/pin_manager.c: 57:     LATE = 0x00;
   440  000092  0E00               	movlw	0
   441  000094  6E8D               	movwf	141,c	;volatile
   442                           
   443                           ;mcc_generated_files/pin_manager.c: 58:     LATD = 0x00;
   444  000096  0E00               	movlw	0
   445  000098  6E8C               	movwf	140,c	;volatile
   446                           
   447                           ;mcc_generated_files/pin_manager.c: 59:     LATA = 0x00;
   448  00009A  0E00               	movlw	0
   449  00009C  6E89               	movwf	137,c	;volatile
   450                           
   451                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
   452  00009E  0E00               	movlw	0
   453  0000A0  6E8A               	movwf	138,c	;volatile
   454                           
   455                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
   456  0000A2  0E00               	movlw	0
   457  0000A4  6E8B               	movwf	139,c	;volatile
   458                           
   459                           ;mcc_generated_files/pin_manager.c: 66:     TRISE = 0xC7;
   460  0000A6  0EC7               	movlw	199
   461  0000A8  6E96               	movwf	150,c	;volatile
   462                           
   463                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x2F;
   464  0000AA  0E2F               	movlw	47
   465  0000AC  6E92               	movwf	146,c	;volatile
   466  0000AE                     
   467                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   468  0000AE  6893               	setf	147,c	;volatile
   469                           
   470                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFB;
   471  0000B0  0EFB               	movlw	251
   472  0000B2  6E94               	movwf	148,c	;volatile
   473  0000B4                     
   474                           ;mcc_generated_files/pin_manager.c: 70:     TRISD = 0xFF;
   475  0000B4  6895               	setf	149,c	;volatile
   476                           
   477                           ;mcc_generated_files/pin_manager.c: 75:     ANCON0 = 0x0F;
   478  0000B6  0E0F               	movlw	15
   479  0000B8  010F               	movlb	15	; () banked
   480  0000BA  6F48               	movwf	72,b	;volatile
   481                           
   482                           ;mcc_generated_files/pin_manager.c: 76:     ANCON1 = 0x1D;
   483  0000BC  0E1D               	movlw	29
   484  0000BE  6F49               	movwf	73,b	;volatile
   485  0000C0                     
   486                           ; BSR set to: 15
   487                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 0;
   488  0000C0  9EF1               	bcf	241,7,c	;volatile
   489  0000C2                     
   490                           ; BSR set to: 15
   491                           ;mcc_generated_files/pin_manager.c: 84:     TRISEbits.RDPU = 1;
   492  0000C2  8E96               	bsf	150,7,c	;volatile
   493  0000C4                     
   494                           ; BSR set to: 15
   495                           ;mcc_generated_files/pin_manager.c: 85:     TRISEbits.REPU = 1;
   496  0000C4  8C96               	bsf	150,6,c	;volatile
   497                           
   498                           ;mcc_generated_files/pin_manager.c: 91:     ODCON1 = 0x00;
   499  0000C6  0E00               	movlw	0
   500  0000C8  6F42               	movwf	66,b	;volatile
   501                           
   502                           ;mcc_generated_files/pin_manager.c: 92:     ODCON2 = 0x00;
   503  0000CA  0E00               	movlw	0
   504  0000CC  6F41               	movwf	65,b	;volatile
   505                           
   506                           ;mcc_generated_files/pin_manager.c: 93:     ODCON3 = 0x00;
   507  0000CE  0E00               	movlw	0
   508  0000D0  6F40               	movwf	64,b	;volatile
   509                           
   510                           ;mcc_generated_files/pin_manager.c: 99:     RPINR2 = 0x05;
   511  0000D2  0E05               	movlw	5
   512  0000D4  010E               	movlb	14	; () banked
   513  0000D6  6FE2               	movwf	226,b	;volatile
   514                           
   515                           ;mcc_generated_files/pin_manager.c: 100:     RPINR1 = 0x04;
   516  0000D8  0E04               	movlw	4
   517  0000DA  6FE1               	movwf	225,b	;volatile
   518  0000DC                     
   519                           ; BSR set to: 14
   520  0000DC  0012               	return		;funcret
   521  0000DE                     __end_of_PIN_MANAGER_Initialize:
   522                           	callstack 0
   523                           
   524 ;; *************** function _OSCILLATOR_Initialize *****************
   525 ;; Defined at:
   526 ;;		line 60 in file "mcc_generated_files/mcc.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, status,2
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   544 ;;Total ram usage:        0 bytes
   545 ;; Hardware stack levels used: 1
   546 ;; Hardware stack levels required when called: 8
   547 ;; This function calls:
   548 ;;		Nothing
   549 ;; This function is called by:
   550 ;;		_SYSTEM_Initialize
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text5
   555  000224                     __ptext5:
   556                           	callstack 0
   557  000224                     _OSCILLATOR_Initialize:
   558                           	callstack 21
   559  000224                     
   560                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x60;
   561  000224  0E60               	movlw	96
   562  000226  6ED3               	movwf	211,c	;volatile
   563                           
   564                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
   565  000228  0E00               	movlw	0
   566  00022A  6E9B               	movwf	155,c	;volatile
   567                           
   568                           ;mcc_generated_files/mcc.c: 68:     REFOCON = 0x00;
   569  00022C  0E00               	movlw	0
   570  00022E  010F               	movlb	15	; () banked
   571  000230  6F3D               	movwf	61,b	;volatile
   572                           
   573                           ;mcc_generated_files/mcc.c: 70:     OSCCON2 = 0x14;
   574  000232  0E14               	movlw	20
   575  000234  6E87               	movwf	135,c	;volatile
   576  000236                     
   577                           ; BSR set to: 15
   578  000236  0012               	return		;funcret
   579  000238                     __end_of_OSCILLATOR_Initialize:
   580                           	callstack 0
   581                           
   582 ;; *************** function _INTERRUPT_Initialize *****************
   583 ;; Defined at:
   584 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		None
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   602 ;;Total ram usage:        0 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; Hardware stack levels required when called: 8
   605 ;; This function calls:
   606 ;;		Nothing
   607 ;; This function is called by:
   608 ;;		_SYSTEM_Initialize
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text6
   613  000260                     __ptext6:
   614                           	callstack 0
   615  000260                     _INTERRUPT_Initialize:
   616                           	callstack 21
   617  000260                     
   618                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
   619  000260  8ED0               	bsf	208,7,c	;volatile
   620                           
   621                           ;mcc_generated_files/interrupt_manager.c: 60:     INTCON2bits.TMR0IP = 1;
   622  000262  84F1               	bsf	241,2,c	;volatile
   623                           
   624                           ;mcc_generated_files/interrupt_manager.c: 64:     INTCON3bits.INT2IP = 0;
   625  000264  9EF0               	bcf	240,7,c	;volatile
   626                           
   627                           ;mcc_generated_files/interrupt_manager.c: 67:     INTCON3bits.INT1IP = 0;
   628  000266  9CF0               	bcf	240,6,c	;volatile
   629  000268  0012               	return		;funcret
   630  00026A                     __end_of_INTERRUPT_Initialize:
   631                           	callstack 0
   632                           
   633 ;; *************** function _EXT_INT_Initialize *****************
   634 ;; Defined at:
   635 ;;		line 86 in file "mcc_generated_files/ext_int.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, status,2, status,0, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   653 ;;Total ram usage:        0 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; Hardware stack levels required when called: 9
   656 ;; This function calls:
   657 ;;		_INT1_SetInterruptHandler
   658 ;;		_INT2_SetInterruptHandler
   659 ;; This function is called by:
   660 ;;		_SYSTEM_Initialize
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text7
   665  0001D4                     __ptext7:
   666                           	callstack 0
   667  0001D4                     _EXT_INT_Initialize:
   668                           	callstack 20
   669  0001D4                     
   670                           ;mcc_generated_files/ext_int.c: 91:     (INTCON3bits.INT1IF = 0);
   671  0001D4  90F0               	bcf	240,0,c	;volatile
   672                           
   673                           ;mcc_generated_files/ext_int.c: 92:     (INTCON2bits.INTEDG1 = 0);
   674  0001D6  9AF1               	bcf	241,5,c	;volatile
   675  0001D8                     
   676                           ;mcc_generated_files/ext_int.c: 94:     INT1_SetInterruptHandler(INT1_DefaultInterruptHa
      +                          ndler);
   677  0001D8  0E90               	movlw	low _INT1_DefaultInterruptHandler
   678  0001DA  6E08               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
   679  0001DC  0E02               	movlw	high _INT1_DefaultInterruptHandler
   680  0001DE  6E09               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
   681  0001E0  EC3A  F001         	call	_INT1_SetInterruptHandler	;wreg free
   682  0001E4                     
   683                           ;mcc_generated_files/ext_int.c: 95:     (INTCON3bits.INT1IE = 1);
   684  0001E4  86F0               	bsf	240,3,c	;volatile
   685  0001E6                     
   686                           ;mcc_generated_files/ext_int.c: 100:     (INTCON3bits.INT2IF = 0);
   687  0001E6  92F0               	bcf	240,1,c	;volatile
   688  0001E8                     
   689                           ;mcc_generated_files/ext_int.c: 101:     (INTCON2bits.INTEDG2 = 0);
   690  0001E8  98F1               	bcf	241,4,c	;volatile
   691                           
   692                           ;mcc_generated_files/ext_int.c: 103:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
   693  0001EA  0E8E               	movlw	low _INT2_DefaultInterruptHandler
   694  0001EC  6E08               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
   695  0001EE  0E02               	movlw	high _INT2_DefaultInterruptHandler
   696  0001F0  6E09               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
   697  0001F2  EC35  F001         	call	_INT2_SetInterruptHandler	;wreg free
   698  0001F6                     
   699                           ;mcc_generated_files/ext_int.c: 104:     (INTCON3bits.INT2IE = 1);
   700  0001F6  88F0               	bsf	240,4,c	;volatile
   701  0001F8  0012               	return		;funcret
   702  0001FA                     __end_of_EXT_INT_Initialize:
   703                           	callstack 0
   704                           
   705 ;; *************** function _INT2_SetInterruptHandler *****************
   706 ;; Defined at:
   707 ;;		line 77 in file "mcc_generated_files/ext_int.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  InterruptHan    2    7[COMRAM] PTR FTN()void 
   710 ;;		 -> INT2_DefaultInterruptHandler(1), 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   726 ;;Total ram usage:        2 bytes
   727 ;; Hardware stack levels used: 1
   728 ;; Hardware stack levels required when called: 8
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_EXT_INT_Initialize
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text8
   737  00026A                     __ptext8:
   738                           	callstack 0
   739  00026A                     _INT2_SetInterruptHandler:
   740                           	callstack 20
   741  00026A                     
   742                           ;mcc_generated_files/ext_int.c: 78:     INT2_InterruptHandler = InterruptHandler;
   743  00026A  C008  F00C         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
   744  00026E  C009  F00D         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
   745  000272  0012               	return		;funcret
   746  000274                     __end_of_INT2_SetInterruptHandler:
   747                           	callstack 0
   748                           
   749 ;; *************** function _INT1_SetInterruptHandler *****************
   750 ;; Defined at:
   751 ;;		line 51 in file "mcc_generated_files/ext_int.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  InterruptHan    2    7[COMRAM] PTR FTN()void 
   754 ;;		 -> INT1_DefaultInterruptHandler(1), 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   766 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   770 ;;Total ram usage:        2 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; Hardware stack levels required when called: 8
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_EXT_INT_Initialize
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text9
   781  000274                     __ptext9:
   782                           	callstack 0
   783  000274                     _INT1_SetInterruptHandler:
   784                           	callstack 20
   785  000274                     
   786                           ;mcc_generated_files/ext_int.c: 52:     INT1_InterruptHandler = InterruptHandler;
   787  000274  C008  F00E         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
   788  000278  C009  F00F         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
   789  00027C  0012               	return		;funcret
   790  00027E                     __end_of_INT1_SetInterruptHandler:
   791                           	callstack 0
   792                           
   793 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
   794 ;; Defined at:
   795 ;;		line 87 in file "mcc_generated_files/interrupt_manager.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   811 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   812 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   813 ;;Total ram usage:        5 bytes
   814 ;; Hardware stack levels used: 1
   815 ;; Hardware stack levels required when called: 7
   816 ;; This function calls:
   817 ;;		_INT1_ISR
   818 ;;		_INT2_ISR
   819 ;; This function is called by:
   820 ;;		Interrupt level 1
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	intcodelo
   825  000018                     __pintcodelo:
   826                           	callstack 0
   827  000018                     _INTERRUPT_InterruptManagerLow:
   828                           	callstack 20
   829                           
   830                           ;incstack = 0
   831  000018  8014               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   832  00001A  CFD8 F003          	movff	status,??_INTERRUPT_InterruptManagerLow
   833  00001E  CFE8 F004          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
   834  000022  CFE0 F005          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
   835  000026  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
   836  00002A  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
   837  00002E                     
   838                           ;mcc_generated_files/interrupt_manager.c: 91:     if(INTCON3bits.INT2IE == 1 && INTCON3b
      +                          its.INT2IF == 1)
   839  00002E  A8F0               	btfss	240,4,c	;volatile
   840  000030  EF1C  F000         	goto	i1u9_21
   841  000034  EF1E  F000         	goto	i1u9_20
   842  000038                     i1u9_21:
   843  000038  EF2A  F000         	goto	i1l103
   844  00003C                     i1u9_20:
   845  00003C  A2F0               	btfss	240,1,c	;volatile
   846  00003E  EF23  F000         	goto	i1u10_21
   847  000042  EF25  F000         	goto	i1u10_20
   848  000046                     i1u10_21:
   849  000046  EF2A  F000         	goto	i1l103
   850  00004A                     i1u10_20:
   851  00004A                     
   852                           ;mcc_generated_files/interrupt_manager.c: 92:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 93:         INT2_ISR();
   853  00004A  EC3F  F001         	call	_INT2_ISR	;wreg free
   854  00004E                     
   855                           ;mcc_generated_files/interrupt_manager.c: 94:         LATAbits.LATA6 ^= 1;
   856  00004E  7C89               	btg	137,6,c	;volatile
   857                           
   858                           ;mcc_generated_files/interrupt_manager.c: 95:     }
   859  000050  EF3B  F000         	goto	i1l107
   860  000054                     i1l103:
   861  000054  A6F0               	btfss	240,3,c	;volatile
   862  000056  EF2F  F000         	goto	i1u11_21
   863  00005A  EF31  F000         	goto	i1u11_20
   864  00005E                     i1u11_21:
   865  00005E  EF3B  F000         	goto	i1l107
   866  000062                     i1u11_20:
   867  000062  A0F0               	btfss	240,0,c	;volatile
   868  000064  EF36  F000         	goto	i1u12_21
   869  000068  EF38  F000         	goto	i1u12_20
   870  00006C                     i1u12_21:
   871  00006C  EF3B  F000         	goto	i1l107
   872  000070                     i1u12_20:
   873  000070                     
   874                           ;mcc_generated_files/interrupt_manager.c: 97:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 98:         INT1_ISR();
   875  000070  EC43  F001         	call	_INT1_ISR	;wreg free
   876  000074                     
   877                           ;mcc_generated_files/interrupt_manager.c: 99:         LATAbits.LATA7 ^= 1;
   878  000074  7E89               	btg	137,7,c	;volatile
   879  000076                     i1l107:
   880  000076  C007  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
   881  00007A  C006  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
   882  00007E  C005  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
   883  000082  C004  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
   884  000086  C003  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
   885  00008A  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   886  00008C  0010               	retfie	
   887  00008E                     __end_of_INTERRUPT_InterruptManagerLow:
   888                           	callstack 0
   889                           
   890 ;; *************** function _INT2_ISR *****************
   891 ;; Defined at:
   892 ;;		line 59 in file "mcc_generated_files/ext_int.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; Hardware stack levels required when called: 6
   913 ;; This function calls:
   914 ;;		_INT2_CallBack
   915 ;; This function is called by:
   916 ;;		_INTERRUPT_InterruptManagerLow
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text11
   921  00027E                     __ptext11:
   922                           	callstack 0
   923  00027E                     _INT2_ISR:
   924                           	callstack 20
   925  00027E                     
   926                           ;mcc_generated_files/ext_int.c: 61:     (INTCON3bits.INT2IF = 0);
   927  00027E  92F0               	bcf	240,1,c	;volatile
   928  000280                     
   929                           ;mcc_generated_files/ext_int.c: 64:     INT2_CallBack();
   930  000280  ECA5  F000         	call	_INT2_CallBack	;wreg free
   931  000284  0012               	return		;funcret
   932  000286                     __end_of_INT2_ISR:
   933                           	callstack 0
   934                           
   935 ;; *************** function _INT2_CallBack *****************
   936 ;; Defined at:
   937 ;;		line 68 in file "mcc_generated_files/ext_int.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   955 ;;Total ram usage:        0 bytes
   956 ;; Hardware stack levels used: 1
   957 ;; Hardware stack levels required when called: 5
   958 ;; This function calls:
   959 ;;		Absolute function
   960 ;;		_INT2_DefaultInterruptHandler
   961 ;; This function is called by:
   962 ;;		_INT2_ISR
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text12
   967  00014A                     __ptext12:
   968                           	callstack 0
   969  00014A                     _INT2_CallBack:
   970                           	callstack 20
   971  00014A                     
   972                           ;mcc_generated_files/ext_int.c: 71:     if(INT2_InterruptHandler)
   973  00014A  500C               	movf	_INT2_InterruptHandler^0,w,c
   974  00014C  100D               	iorwf	(_INT2_InterruptHandler+1)^0,w,c
   975  00014E  B4D8               	btfsc	status,2,c
   976  000150  EFAC  F000         	goto	i1u5_21
   977  000154  EFAE  F000         	goto	i1u5_20
   978  000158                     i1u5_21:
   979  000158  EFBB  F000         	goto	i1l190
   980  00015C                     i1u5_20:
   981  00015C                     
   982                           ;mcc_generated_files/ext_int.c: 72:     {;mcc_generated_files/ext_int.c: 73:         INT
      +                          2_InterruptHandler();
   983  00015C  D802               	call	i1u6_28
   984  00015E  EFBB  F000         	goto	i1u6_29
   985  000162                     i1u6_28:
   986  000162  0005               	push	
   987  000164  6EFA               	movwf	pclath,c
   988  000166  500C               	movf	_INT2_InterruptHandler^0,w,c
   989  000168  6EFD               	movwf	tosl,c
   990  00016A  500D               	movf	(_INT2_InterruptHandler+1)^0,w,c
   991  00016C  6EFE               	movwf	tosh,c
   992  00016E  50F8               	movf	tblptru,w,c
   993  000170  6EFF               	movwf	tosu,c
   994  000172  50FA               	movf	pclath,w,c
   995  000174  0012               	return		;indir
   996  000176                     i1u6_29:
   997  000176                     i1l190:
   998  000176  0012               	return		;funcret
   999  000178                     __end_of_INT2_CallBack:
  1000                           	callstack 0
  1001                           
  1002 ;; *************** function _INT2_DefaultInterruptHandler *****************
  1003 ;; Defined at:
  1004 ;;		line 81 in file "mcc_generated_files/ext_int.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		None
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1022 ;;Total ram usage:        0 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; Hardware stack levels required when called: 4
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		_EXT_INT_Initialize
  1029 ;;		_INT2_CallBack
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text13
  1034  00028E                     __ptext13:
  1035                           	callstack 0
  1036  00028E                     _INT2_DefaultInterruptHandler:
  1037                           	callstack 20
  1038  00028E  0012               	return		;funcret
  1039  000290                     __end_of_INT2_DefaultInterruptHandler:
  1040                           	callstack 0
  1041                           
  1042 ;; *************** function _INT1_ISR *****************
  1043 ;; Defined at:
  1044 ;;		line 33 in file "mcc_generated_files/ext_int.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1062 ;;Total ram usage:        0 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 6
  1065 ;; This function calls:
  1066 ;;		_INT1_CallBack
  1067 ;; This function is called by:
  1068 ;;		_INTERRUPT_InterruptManagerLow
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text14
  1073  000286                     __ptext14:
  1074                           	callstack 0
  1075  000286                     _INT1_ISR:
  1076                           	callstack 20
  1077  000286                     
  1078                           ;mcc_generated_files/ext_int.c: 35:     (INTCON3bits.INT1IF = 0);
  1079  000286  90F0               	bcf	240,0,c	;volatile
  1080  000288                     
  1081                           ;mcc_generated_files/ext_int.c: 38:     INT1_CallBack();
  1082  000288  ECBC  F000         	call	_INT1_CallBack	;wreg free
  1083  00028C  0012               	return		;funcret
  1084  00028E                     __end_of_INT1_ISR:
  1085                           	callstack 0
  1086                           
  1087 ;; *************** function _INT1_CallBack *****************
  1088 ;; Defined at:
  1089 ;;		line 42 in file "mcc_generated_files/ext_int.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1107 ;;Total ram usage:        0 bytes
  1108 ;; Hardware stack levels used: 1
  1109 ;; Hardware stack levels required when called: 5
  1110 ;; This function calls:
  1111 ;;		Absolute function
  1112 ;;		_INT1_DefaultInterruptHandler
  1113 ;; This function is called by:
  1114 ;;		_INT1_ISR
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text15
  1119  000178                     __ptext15:
  1120                           	callstack 0
  1121  000178                     _INT1_CallBack:
  1122                           	callstack 20
  1123  000178                     
  1124                           ;mcc_generated_files/ext_int.c: 45:     if(INT1_InterruptHandler)
  1125  000178  500E               	movf	_INT1_InterruptHandler^0,w,c
  1126  00017A  100F               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  1127  00017C  B4D8               	btfsc	status,2,c
  1128  00017E  EFC3  F000         	goto	i1u3_21
  1129  000182  EFC5  F000         	goto	i1u3_20
  1130  000186                     i1u3_21:
  1131  000186  EFD2  F000         	goto	i1l177
  1132  00018A                     i1u3_20:
  1133  00018A                     
  1134                           ;mcc_generated_files/ext_int.c: 46:     {;mcc_generated_files/ext_int.c: 47:         INT
      +                          1_InterruptHandler();
  1135  00018A  D802               	call	i1u4_28
  1136  00018C  EFD2  F000         	goto	i1u4_29
  1137  000190                     i1u4_28:
  1138  000190  0005               	push	
  1139  000192  6EFA               	movwf	pclath,c
  1140  000194  500E               	movf	_INT1_InterruptHandler^0,w,c
  1141  000196  6EFD               	movwf	tosl,c
  1142  000198  500F               	movf	(_INT1_InterruptHandler+1)^0,w,c
  1143  00019A  6EFE               	movwf	tosh,c
  1144  00019C  50F8               	movf	tblptru,w,c
  1145  00019E  6EFF               	movwf	tosu,c
  1146  0001A0  50FA               	movf	pclath,w,c
  1147  0001A2  0012               	return		;indir
  1148  0001A4                     i1u4_29:
  1149  0001A4                     i1l177:
  1150  0001A4  0012               	return		;funcret
  1151  0001A6                     __end_of_INT1_CallBack:
  1152                           	callstack 0
  1153                           
  1154 ;; *************** function _INT1_DefaultInterruptHandler *****************
  1155 ;; Defined at:
  1156 ;;		line 55 in file "mcc_generated_files/ext_int.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		None
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1174 ;;Total ram usage:        0 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; Hardware stack levels required when called: 4
  1177 ;; This function calls:
  1178 ;;		Nothing
  1179 ;; This function is called by:
  1180 ;;		_EXT_INT_Initialize
  1181 ;;		_INT1_CallBack
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text16
  1186  000290                     __ptext16:
  1187                           	callstack 0
  1188  000290                     _INT1_DefaultInterruptHandler:
  1189                           	callstack 20
  1190  000290  0012               	return		;funcret
  1191  000292                     __end_of_INT1_DefaultInterruptHandler:
  1192                           	callstack 0
  1193                           
  1194 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  1195 ;; Defined at:
  1196 ;;		line 71 in file "mcc_generated_files/interrupt_manager.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1214 ;;Total ram usage:        2 bytes
  1215 ;; Hardware stack levels used: 1
  1216 ;; Hardware stack levels required when called: 3
  1217 ;; This function calls:
  1218 ;;		_TMR0_ISR
  1219 ;; This function is called by:
  1220 ;;		Interrupt level 2
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	intcode
  1225  000008                     __pintcode:
  1226                           	callstack 0
  1227  000008                     _INTERRUPT_InterruptManagerHigh:
  1228                           	callstack 20
  1229                           
  1230                           ;incstack = 0
  1231  000008  8214               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1232  00000A  EF8A  F000         	goto	int_func
  1233                           
  1234                           	psect	intcode_body
  1235  000114                     __pintcode_body:
  1236                           	callstack 20
  1237  000114                     int_func:
  1238                           	callstack 20
  1239  000114  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  1240  000118  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  1241  00011C                     
  1242                           ;mcc_generated_files/interrupt_manager.c: 74:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  1243  00011C  AAF2               	btfss	242,5,c	;volatile
  1244  00011E  EF93  F000         	goto	i2u7_41
  1245  000122  EF95  F000         	goto	i2u7_40
  1246  000126                     i2u7_41:
  1247  000126  EF9F  F000         	goto	i2l98
  1248  00012A                     i2u7_40:
  1249  00012A  A4F2               	btfss	242,2,c	;volatile
  1250  00012C  EF9A  F000         	goto	i2u8_41
  1251  000130  EF9C  F000         	goto	i2u8_40
  1252  000134                     i2u8_41:
  1253  000134  EF9F  F000         	goto	i2l98
  1254  000138                     i2u8_40:
  1255  000138                     
  1256                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 76:         TMR0_ISR();
  1257  000138  EC1C  F001         	call	_TMR0_ISR	;wreg free
  1258  00013C                     
  1259                           ;mcc_generated_files/interrupt_manager.c: 77:         LATCbits.LATC2 ^= 1;
  1260  00013C  748B               	btg	139,2,c	;volatile
  1261  00013E                     i2l98:
  1262  00013E  C002  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  1263  000142  C001  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  1264  000146  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1265  000148  0011               	retfie		f
  1266  00014A                     __end_of_INTERRUPT_InterruptManagerHigh:
  1267                           	callstack 0
  1268                           
  1269 ;; *************** function _TMR0_ISR *****************
  1270 ;; Defined at:
  1271 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;		None
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1289 ;;Total ram usage:        0 bytes
  1290 ;; Hardware stack levels used: 1
  1291 ;; Hardware stack levels required when called: 2
  1292 ;; This function calls:
  1293 ;;		_TMR0_CallBack
  1294 ;; This function is called by:
  1295 ;;		_INTERRUPT_InterruptManagerHigh
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text18
  1300  000238                     __ptext18:
  1301                           	callstack 0
  1302  000238                     _TMR0_ISR:
  1303                           	callstack 20
  1304  000238                     
  1305                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  1306  000238  94F2               	bcf	242,2,c	;volatile
  1307  00023A                     
  1308                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  1309  00023A  5011               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  1310  00023C  6ED7               	movwf	215,c	;volatile
  1311  00023E                     
  1312                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  1313  00023E  C010  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  1314  000242                     
  1315                           ;mcc_generated_files/tmr0.c: 149:     TMR0_CallBack();
  1316  000242  ECD3  F000         	call	_TMR0_CallBack	;wreg free
  1317  000246  0012               	return		;funcret
  1318  000248                     __end_of_TMR0_ISR:
  1319                           	callstack 0
  1320                           
  1321 ;; *************** function _TMR0_CallBack *****************
  1322 ;; Defined at:
  1323 ;;		line 154 in file "mcc_generated_files/tmr0.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;		None
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1341 ;;Total ram usage:        0 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; Hardware stack levels required when called: 1
  1344 ;; This function calls:
  1345 ;;		Absolute function
  1346 ;;		_TMR0_DefaultInterruptHandler
  1347 ;; This function is called by:
  1348 ;;		_TMR0_ISR
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text19
  1353  0001A6                     __ptext19:
  1354                           	callstack 0
  1355  0001A6                     _TMR0_CallBack:
  1356                           	callstack 20
  1357  0001A6                     
  1358                           ;mcc_generated_files/tmr0.c: 158:     if(TMR0_InterruptHandler)
  1359  0001A6  5012               	movf	_TMR0_InterruptHandler^0,w,c
  1360  0001A8  1013               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  1361  0001AA  B4D8               	btfsc	status,2,c
  1362  0001AC  EFDA  F000         	goto	i2u1_41
  1363  0001B0  EFDC  F000         	goto	i2u1_40
  1364  0001B4                     i2u1_41:
  1365  0001B4  EFE9  F000         	goto	i2l152
  1366  0001B8                     i2u1_40:
  1367  0001B8                     
  1368                           ;mcc_generated_files/tmr0.c: 159:     {;mcc_generated_files/tmr0.c: 160:         TMR0_In
      +                          terruptHandler();
  1369  0001B8  D802               	call	i2u2_48
  1370  0001BA  EFE9  F000         	goto	i2u2_49
  1371  0001BE                     i2u2_48:
  1372  0001BE  0005               	push	
  1373  0001C0  6EFA               	movwf	pclath,c
  1374  0001C2  5012               	movf	_TMR0_InterruptHandler^0,w,c
  1375  0001C4  6EFD               	movwf	tosl,c
  1376  0001C6  5013               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  1377  0001C8  6EFE               	movwf	tosh,c
  1378  0001CA  50F8               	movf	tblptru,w,c
  1379  0001CC  6EFF               	movwf	tosu,c
  1380  0001CE  50FA               	movf	pclath,w,c
  1381  0001D0  0012               	return		;indir
  1382  0001D2                     i2u2_49:
  1383  0001D2                     i2l152:
  1384  0001D2  0012               	return		;funcret
  1385  0001D4                     __end_of_TMR0_CallBack:
  1386                           	callstack 0
  1387                           
  1388 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1389 ;; Defined at:
  1390 ;;		line 168 in file "mcc_generated_files/tmr0.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		None
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1408 ;;Total ram usage:        0 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_TMR0_Initialize
  1414 ;;		_TMR0_CallBack
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text20
  1419  000292                     __ptext20:
  1420                           	callstack 0
  1421  000292                     _TMR0_DefaultInterruptHandler:
  1422                           	callstack 20
  1423  000292  0012               	return		;funcret
  1424  000294                     __end_of_TMR0_DefaultInterruptHandler:
  1425                           	callstack 0
  1426  0000                     
  1427                           	psect	text21
  1428  000000                     __ptext21:
  1429                           	callstack 0
  1430  000000                     
  1431                           	psect	rparam
  1432  0000                     
  1433                           	psect	temp
  1434  000014                     btemp:
  1435                           	callstack 0
  1436  000014                     	ds	1
  1437  0000                     int$flags	set	btemp
  1438  0000                     wtemp8	set	btemp+1
  1439  0000                     ttemp5	set	btemp+1
  1440  0000                     ttemp6	set	btemp+4
  1441  0000                     ttemp7	set	btemp+8
  1442                           
  1443                           	psect	config
  1444                           
  1445                           ;Config register CONFIG1L @ 0xFFF8
  1446                           ;	Watchdog Timer
  1447                           ;	WDTEN = OFF, Disabled - Controlled by SWDTEN bit
  1448                           ;	96MHz PLL Prescaler Selection (PLLSEL=0)
  1449                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  1450                           ;	PLL Enable Configuration Bit
  1451                           ;	CFGPLLEN = OFF, PLL Disabled
  1452                           ;	Stack Overflow/Underflow Reset
  1453                           ;	STVREN = OFF, Disabled
  1454                           ;	Extended Instruction Set
  1455                           ;	XINST = OFF, Disabled
  1456  FFF8                     	org	65528
  1457  FFF8  9C                 	db	156
  1458                           
  1459                           ;Config register CONFIG1H @ 0xFFF9
  1460                           ;	Code Protect
  1461                           ;	CP0 = OFF, Program memory is not code-protected
  1462  FFF9                     	org	65529
  1463  FFF9  F4                 	db	244
  1464                           
  1465                           ;Config register CONFIG2L @ 0xFFFA
  1466                           ;	Oscillator
  1467                           ;	OSC = INTOSCPLL, INTOSCPLL
  1468                           ;	T1OSC/SOSC Power Selection Bits
  1469                           ;	SOSCSEL = DIG, Digital (SCLKI) mode selected
  1470                           ;	EC Clock Out Enable Bit
  1471                           ;	CLKOEC = OFF, CLKO output disabled on the RA6 pin
  1472                           ;	Fail-Safe Clock Monitor
  1473                           ;	FCMEN = ON, Enabled
  1474                           ;	Internal External Oscillator Switch Over Mode
  1475                           ;	IESO = ON, Enabled
  1476  FFFA                     	org	65530
  1477  FFFA  D2                 	db	210
  1478                           
  1479                           ;Config register CONFIG2H @ 0xFFFB
  1480                           ;	Watchdog Postscaler
  1481                           ;	WDTPS = 1024, 1:1024
  1482  FFFB                     	org	65531
  1483  FFFB  FA                 	db	250
  1484                           
  1485                           ;Config register CONFIG3L @ 0xFFFC
  1486                           ;	DSWDT Clock Select
  1487                           ;	DSWDTOSC = INTOSCREF, DSWDT uses INTRC
  1488                           ;	RTCC Clock Select
  1489                           ;	RTCOSC = T1OSCREF, RTCC uses T1OSC/T1CKI
  1490                           ;	Deep Sleep BOR
  1491                           ;	DSBOREN = ON, Enabled
  1492                           ;	Deep Sleep Watchdog Timer
  1493                           ;	DSWDTEN = ON, Enabled
  1494                           ;	Deep Sleep Watchdog Postscaler
  1495                           ;	DSWDTPS = G2, 1:2,147,483,648 (25.7 days)
  1496  FFFC                     	org	65532
  1497  FFFC  FF                 	db	255
  1498                           
  1499                           ;Config register CONFIG3H @ 0xFFFD
  1500                           ;	IOLOCK One-Way Set Enable bit
  1501                           ;	IOL1WAY = ON, The IOLOCK bit (PPSCON<0>) can be set once
  1502                           ;	ADC 10 or 12 Bit Select
  1503                           ;	ADCSEL = BIT10, 10 - Bit ADC Enabled
  1504                           ;	PLL Selection Bit
  1505                           ;	PLLSEL = PLL4X, Selects 4x PLL
  1506                           ;	MSSP address masking
  1507                           ;	MSSP7B_EN = MSK7, 7 Bit address masking mode
  1508  FFFD                     	org	65533
  1509  FFFD  FF                 	db	255
  1510                           
  1511                           ;Config register CONFIG4L @ 0xFFFE
  1512                           ;	Write/Erase Protect Page Start/End Location
  1513                           ;	WPFP = PAGE_63, Write Protect Program Flash Page 63
  1514                           ;	Write/Erase Protect Configuration Region
  1515                           ;	WPCFG = OFF, Configuration Words page not erase/write-protected
  1516  FFFE                     	org	65534
  1517  FFFE  BF                 	db	191
  1518                           
  1519                           ;Config register CONFIG4H @ 0xFFFF
  1520                           ;	Write Protect Disable bit
  1521                           ;	WPDIS = OFF, WPFP<6:0>/WPEND region ignored
  1522                           ;	Write/Erase Protect Region Select bit (valid when WPDIS = 0)
  1523                           ;	WPEND = PAGE_WPFP, Pages WPFP<6:0> through Configuration Words erase/write protected
  1524  FFFF                     	org	65535
  1525  FFFF  F3                 	db	243
  1526                           tosu	equ	0xFFF
  1527                           tosh	equ	0xFFE
  1528                           tosl	equ	0xFFD
  1529                           stkptr	equ	0xFFC
  1530                           pclatu	equ	0xFFB
  1531                           pclath	equ	0xFFA
  1532                           pcl	equ	0xFF9
  1533                           tblptru	equ	0xFF8
  1534                           tblptrh	equ	0xFF7
  1535                           tblptrl	equ	0xFF6
  1536                           tablat	equ	0xFF5
  1537                           prodh	equ	0xFF4
  1538                           prodl	equ	0xFF3
  1539                           indf0	equ	0xFEF
  1540                           postinc0	equ	0xFEE
  1541                           postdec0	equ	0xFED
  1542                           preinc0	equ	0xFEC
  1543                           plusw0	equ	0xFEB
  1544                           fsr0h	equ	0xFEA
  1545                           fsr0l	equ	0xFE9
  1546                           wreg	equ	0xFE8
  1547                           indf1	equ	0xFE7
  1548                           postinc1	equ	0xFE6
  1549                           postdec1	equ	0xFE5
  1550                           preinc1	equ	0xFE4
  1551                           plusw1	equ	0xFE3
  1552                           fsr1h	equ	0xFE2
  1553                           fsr1l	equ	0xFE1
  1554                           bsr	equ	0xFE0
  1555                           indf2	equ	0xFDF
  1556                           postinc2	equ	0xFDE
  1557                           postdec2	equ	0xFDD
  1558                           preinc2	equ	0xFDC
  1559                           plusw2	equ	0xFDB
  1560                           fsr2h	equ	0xFDA
  1561                           fsr2l	equ	0xFD9
  1562                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     11      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     294
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              9 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     196
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManagerLow                        5     5      0       0
                                              2 COMRAM     5     5      0
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT2_CallBack                                        0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManagerHigh                       2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (10) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManagerLow (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      B      13       1       20.2%
STACK                0      0       0       2        0.0%
DATA                 0      0      13       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      33        0.0%
BITBIGSFRhh          D      0       0      34        0.0%
BITBIGSFRhlhh       18      0       0      35        0.0%
BITBIGSFRhll         1      0       0      36        0.0%
BITBIGSFRlhh         2      0       0      37        0.0%
BITBIGSFRlhl        34      0       0      38        0.0%
BITBIGSFRllhhhh      4      0       0      39        0.0%
BITBIGSFRllhhhl      4      0       0      40        0.0%
BITBIGSFRllhhll      1      0       0      41        0.0%
BITBIGSFRllhlh      3D      0       0      42        0.0%
BITBIGSFRllhllh      5      0       0      43        0.0%
BITBIGSFRllhlll      2      0       0      44        0.0%
BITBIGSFRlllh       5A      0       0      45        0.0%
BITBIGSFRllll       31      0       0      46        0.0%
ABS                  0      0      13      47        0.0%
BIGRAM             EAF      0       0      48        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Oct 24 09:47:49 2022

                                      l21 020E                                        l24 0236  
                                      l91 0268                                        l67 00DC  
                                      bsr 000FE0                           _timer0ReloadVal 0010  
                                     l130 0112                                       l155 025E  
                                     l180 027C                                       l193 0272  
                                     l199 01F8                                       l901 00AE  
                                     l903 00B4                                       l905 00C0  
                                     l907 00C2                                       l909 00C4  
                                     l895 0224                                       l897 0260  
                                     l899 0092                                       tosl 000FFD  
                                     wreg 000FE8                             _INT1_CallBack 0178  
                                    l1031 026A                                      l1041 01E8  
                                    l1033 01D4                                      l1043 01F6  
                                    l1035 01D8                                      l1027 0256  
                                    l1051 00FE                                      l1029 0274  
                                    l1037 01E4                                      l1053 0100  
                                    l1045 00DE                                      l1061 01FE  
                                    l1039 01E6                                      l1055 0102  
                                    l1047 00E0                                      l1063 0202  
                                    l1071 0214                                      l1057 010E  
                                    l1049 00E8                                      l1065 0206  
                                    l1073 0216                                      l1067 020A  
                                    l1059 01FA                                      l1075 0218  
                                    l1077 021A                                      l1069 0210  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      i2l98 013E  
                           _INT2_CallBack 014A                                      _main 0210  
                                    btemp 0014                 ?_INT2_SetInterruptHandler 0008  
                                    start 008E                              ___param_bank 000000  
                 __end_of_TMR0_Initialize 0114                          __end_of_INT1_ISR 028E  
                        __end_of_INT2_ISR 0286            ??_TMR0_DefaultInterruptHandler 0001  
           __end_of_OSCILLATOR_Initialize 0238                                     ?_main 0001  
                                   _T0CON 000FD5                                     i1l103 0054  
                                   i1l107 0076                                     i1l173 028C  
                                   i1l190 0176                                     i1l183 0290  
                                   i1l177 01A4                                     i1l186 0284  
                                   i1l196 028E                                     i2l152 01D2  
                                   i2l148 0246                                     i2l158 0292  
                                   i1l941 0178                                     i1l943 018A  
                                   i1l945 014A                                     i1l971 0286  
                                   i1l947 015C                                     i1l973 0288  
                                   i1l967 027E                                     i1l991 004E  
                                   i1l969 0280                                     i1l993 0062  
                                   i1l985 002E                                     i1l995 0070  
                                   i1l987 003C                                     i1l997 0074  
                                   i1l989 004A                                     i2l937 01A6  
                                   i2l961 023A                                     i2l939 01B8  
                                   i2l963 023E                                     i2l965 0242  
                                   i2l981 0138                                     i2l959 0238  
                                   i2l983 013C                                     i2l977 011C  
                                   i2l979 012A                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
               ?_TMR0_SetInterruptHandler 0008                          __end_of_TMR0_ISR 0248  
                          ?_INT1_CallBack 0001            ??_INT1_DefaultInterruptHandler 0003  
                          ?_INT2_CallBack 0001                  _INT1_SetInterruptHandler 0274  
                                   pclath 000FFA                                     pclatu 000FFB  
                                   ttemp5 0015                                     ttemp6 0018  
                                   ttemp7 001C                                     status 000FD8  
                                   wtemp8 0015            ?_INTERRUPT_InterruptManagerLow 0001  
                         __initialization 0248                              __end_of_main 0224  
                                  ??_main 000C                             __activetblptr 000002  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                                  _ODCON1 000F42                                    _ODCON2 000F41  
                                  _ODCON3 000F40                                    _OSCCON 000FD3  
                                  _RPINR1 000EE1                                    _RPINR2 000EE2  
                                  i1u3_20 018A                                    i1u3_21 0186  
                                  i1u4_28 0190                                    i1u5_20 015C  
                                  i1u4_29 01A4                                    i1u5_21 0158  
                                  i2u1_40 01B8                                    i2u1_41 01B4  
                                  i1u6_28 0162                                    i1u6_29 0176  
                                  i2u2_48 01BE                                    i2u2_49 01D2  
                                  i1u9_20 003C                                    i1u9_21 0038  
                                  i2u7_40 012A                                    i2u7_41 0126  
                                  i2u8_40 0138                                    i2u8_41 0134  
                        ?_TMR0_Initialize 0001                                    isa$std 000001  
    __end_of_INT2_DefaultInterruptHandler 0290              _INT2_DefaultInterruptHandler 028E  
                         ??_INT1_CallBack 0003                                    tblptru 000FF8  
                         ??_INT2_CallBack 0003                     __end_of_TMR0_CallBack 01D4  
INT2_SetInterruptHandler@InterruptHandler 0008  INT1_SetInterruptHandler@InterruptHandler 0008  
TMR0_SetInterruptHandler@InterruptHandler 0008          ??_INTERRUPT_InterruptManagerHigh 0001  
         ?_INTERRUPT_InterruptManagerHigh 0001                         _SYSTEM_Initialize 01FA  
                              __accesstop 0060                   __end_of__initialization 0248  
                               ?_INT1_ISR 0001                                 ?_INT2_ISR 0001  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 000C  
                               ?_TMR0_ISR 0001          __end_of_INT2_SetInterruptHandler 0274  
         fp__INT2_DefaultInterruptHandler 0000             ?_INT2_DefaultInterruptHandler 0001  
               __end_of_SYSTEM_Initialize 0210                                ??_INT1_ISR 0003  
                              ??_INT2_ISR 0003                                __pnvCOMRAM 000C  
        __end_of_TMR0_SetInterruptHandler 0260                                ??_TMR0_ISR 0001  
              ??_INT1_SetInterruptHandler 000A                                   _REFOCON 000F3D  
                                 _OSCCON2 000F87                                   i1u10_20 004A  
                                 i1u10_21 0046                                   i1u11_20 0062  
                                 i1u11_21 005E                                   i1u12_20 0070  
                                 i1u12_21 006C                                   _OSCTUNE 000F9B  
                                 __Hparam 0000                                   __Lparam 0000  
                                 __pcinit 0248                                   __ramtop 0F00  
                                 __ptext0 0210                                   __ptext1 01FA  
                                 __ptext2 00DE                                   __ptext3 0256  
                                 __ptext4 0092                                   __ptext5 0224  
                                 __ptext6 0260                                   __ptext7 01D4  
                                 __ptext8 026A                                   __ptext9 0274  
                               _T0CONbits 000FD5                     _OSCILLATOR_Initialize 0224  
                ??_PIN_MANAGER_Initialize 0008                            __pintcode_body 0114  
                    end_of_initialization 0248                  _INT2_SetInterruptHandler 026A  
          ??_INT2_DefaultInterruptHandler 0003                             __Lmediumconst 0000  
                                 int_func 0114                  _TMR0_SetInterruptHandler 0256  
                   _INT1_InterruptHandler 000E                                 _TRISEbits 000F96  
            __end_of_INTERRUPT_Initialize 026A                    ?_OSCILLATOR_Initialize 0001  
                     start_initialization 0248                     __end_of_INT1_CallBack 01A6  
                   __end_of_INT2_CallBack 0178                __end_of_EXT_INT_Initialize 01FA  
                   _INT2_InterruptHandler 000C                     _TMR0_InterruptHandler 0012  
                  _PIN_MANAGER_Initialize 0092                                 __pintcode 0008  
                             __pintcodelo 0018                ??_INT2_SetInterruptHandler 000A  
                           _TMR0_CallBack 01A6                      _INTERRUPT_Initialize 0260  
                       ??_TMR0_Initialize 000A                                  _INT1_ISR 0286  
                                _INT2_ISR 027E                                  _LATAbits 000F89  
                                _LATCbits 000F8B                 ?_INT1_SetInterruptHandler 0008  
              ??_TMR0_SetInterruptHandler 000A                                  _RCONbits 000FD0  
                                _TMR0_ISR 0238                            ?_TMR0_CallBack 0001  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                   ?_INTERRUPT_Initialize 0001                                  __Hrparam 0000  
                                __Lrparam 0000                   ??_OSCILLATOR_Initialize 0008  
         ??_INTERRUPT_InterruptManagerLow 0003                                  __ptext11 027E  
                                __ptext20 0292                                  __ptext12 014A  
                                __ptext21 0000                                  __ptext13 028E  
                                __ptext14 0286                                  __ptext15 0178  
                                __ptext16 0290                                  __ptext18 0238  
                                __ptext19 01A6      __end_of_TMR0_DefaultInterruptHandler 0294  
            _TMR0_DefaultInterruptHandler 0292                                  isa$xinst 000000  
                                int$flags 0014      __end_of_INT1_DefaultInterruptHandler 0292  
            _INT1_DefaultInterruptHandler 0290                                _INTCONbits 000FF2  
                         ??_TMR0_CallBack 0001                    ??_INTERRUPT_Initialize 0008  
                      _EXT_INT_Initialize 01D4                                  intlevel1 0000  
                                intlevel2 0000                   ?_PIN_MANAGER_Initialize 0001  
                     ?_EXT_INT_Initialize 0001           fp__TMR0_DefaultInterruptHandler 0000  
           ?_TMR0_DefaultInterruptHandler 0001    __end_of_INTERRUPT_InterruptManagerHigh 014A  
          _INTERRUPT_InterruptManagerHigh 0008                      ??_EXT_INT_Initialize 000A  
         fp__INT1_DefaultInterruptHandler 0000             ?_INT1_DefaultInterruptHandler 0001  
                         _TMR0_Initialize 00DE          __end_of_INT1_SetInterruptHandler 027E  
   __end_of_INTERRUPT_InterruptManagerLow 008E             _INTERRUPT_InterruptManagerLow 0018  
          __end_of_PIN_MANAGER_Initialize 00DE  
